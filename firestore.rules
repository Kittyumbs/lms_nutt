rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {
    function authed() { return request.auth != null; }
    function userId() { return request.auth.uid; }
    function isInstructor() {
      return authed() && get(/databases/$(db)/documents/users/$(userId())).data.role in ['instructor','admin'];
    }
    match /courses/{cid} {
      allow read: if resource.data.status == 'Published' || isInstructor() || (authed() && resource.data.ownerUid == userId());
      allow create: if isInstructor();
      allow update, delete: if isInstructor() || (authed() && resource.data.ownerUid == userId());
    }
    match /courses/{cid}/modules/{mid} {
      allow read: if true;
      allow create, update, delete: if isInstructor();
    }
    match /courses/{cid}/lessons/{lid} {
      allow read: if true;
      allow create, update, delete: if isInstructor();
    }
    match /enrollments/{eid} {
      allow read, create: if authed() && request.resource.data.uid == userId();
      allow update, delete: if authed() && resource.data.uid == userId();
    }
    match /progress/{pid} {
      allow read, create: if authed() && request.resource.data.uid == userId();
      allow update, delete: if authed() && resource.data.uid == userId();
    }
    match /users/{uid} {
      allow read: if authed();
      allow create, update: if authed() && uid == userId();
    }
  }
}
